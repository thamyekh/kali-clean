% linux misc

# grep help
<binary> --help |& grep -- "<string>"

# grep lines after
grep -A <num_lines> "pattern" <file>

# copy paste clipboard
cat <FILE> | xclip -selection clipboard

# scp modified files only with ssh key
rsync -Pavu -e "ssh -i $HOME/.ssh/<KEY_NAME>" <FILE> <VIC_USER>@<REMOTE_IP>:~

# scp different port
scp -P 2222 Pentester@10.0.247.203:linpeas.out .

# disk: find the largest folders
sudo du -h --max-depth=1 / | sort -h | tail -n 10

# free disk space
df -h

# journalctl systemctl logs
journalctl -xeu <SERVICE>

# get graphics details
lspci | grep -i vga

# change resolution X11
xrandr
xrandr --output <display_name> --mode <resolution>

# create resolution X11 (example 1920x900x60Hz)
cvt 1920 900 60
xrandr --newmode "1920x900"  142.50  1920 2032 2232 2544  900 903 913 934 -hsync +vsync
xrandr --addmode Virtual-1 1920x900
xrandr --output Virtual-1 --mode 1920x900

# convert vmware ova to qemu format
tar xvf <VM>.ova
qemu-img convert -O qcow2 <VM>.vmdk <VM>.qcow2

# list/show contents tar file
tar tvf <TARGZ_FILE>.tar.gz

# kill process by name
pkill -f <PROCESS_NAME> || echo "No process found to kill"

# force kill
kill -9 <PROCESS_NAME>

# apt purge proper
sudo apt purge <PACKAGE> && sudo apt clean && sudo apt autoremove
apt autopurge

# export PATH temporarily
export PATH="$HOME/go/bin:$PATH"

# creating boot drive from iso
sudo mkfs.exfat /dev/sdX
sudo fsck /dev/sdX
sudo dd bs=4M if=/path/to/file.iso of=/dev/sdX status=progress oflag=sync

# fix usb devices not detected
sudo lsusb -v

# 7z extract one file only
7z e <archive.zip> -o <outputdir> <fileFilter>

# chown user and group (recursively)
chown newuser:newgroup example.txt
chown -R newuser:newgroup /path/to/directory

# wifi drivers
lspci | grep "Network controller‚Äù
apt-get update
apt-get install linux-image-$(uname -r|sed 's,[^-]*-[^-]*-,,') linux-headers-$(uname -r|sed 's,[^-]*-[^-]*-,,') broadcom-sta-dkms
modprobe -r b44 b43 b43legacy ssb brcmsmac bcma
modprobe wl

# connecting to wifi
nmcli device wifi list
nmcli device wifi connect <SSID> password <PASS>

# remote logout
ssh must be enabled and you must ssh in first:
who
sudo pkill -KILL -u username

# delete all broken symbolic links
find / -type l ! -exec test -e {} \; -print0 | xargs -0 rm

# get package info
apt show netcat-traditional

# installing ventoy
cd ventoy-*
lsblk
sudo ./Ventoy2Disk.sh -i /dev/<USB_SDX>

# create iso from folder
mkisofs -o <OUTPUT>.iso <FOLDER>

# redhat rpm install
sudo rpm -ivh example-package-1.0.0-1.x86_64.rpm

# expand/resize partition then lvm example add 40GB
sudo qemu-img resize /var/lib/libvirt/images/rocky8.qcow2 +40G
sudo qemu-img info /var/lib/libvirt/images/rocky8.qcow2
sudo parted -l
parted
(parted) resizepart <partition_number> 100%
sudo partprobe
sudo pvresize /dev/sdX#
pvdisplay
sudo lvextend -l +100%FREE /dev/mapper/lv_name
rocky (xfs): sudo xfs_growfs /
debian (ext4): /dev/vg_name/lv_name

# ssh public key
ssh-keygen -t ed25519 -C "proxmox"
IDED25519PUB: cat ~/.ssh/id_ed25519.pub
remote: echo IDED25519PUB | tee -a ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys
local: ssh -i ~/.ssh/id_ed25519 root@<container_IP>

# determine wireless chipset
lspci -nn | grep Network
